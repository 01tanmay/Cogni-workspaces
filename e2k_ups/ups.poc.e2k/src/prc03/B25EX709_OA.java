package prc03;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//
//                    Source Code Generated by
//                           CA Gen 8.6
//
//    Copyright (c) 2020 CA Technologies. All rights reserved.
//
//    Name: B25EX709_OA                      Date: 2020/03/11
//    User: YWH0NKF                          Time: 16:48:32
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// Import Statements
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.lang.*;
import java.io.*;
import java.util.*;
import java.math.*;
import java.sql.*;
import com.ca.gen.vwrt.*;
import com.ca.gen.vwrt.types.*;
import com.ca.gen.vwrt.vdf.*;
import com.ca.gen.csu.exception.*;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// START OF EXPORT VIEW
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
/**
 * Internal data view storage for: B25EX709_OA
 **/
public class B25EX709_OA extends ViewBase implements IExportView, Serializable
{
  // Entity View: EXP
  //        Type: EWW_COMPONENT
  /**
   * Attribute missing flag for: ExpEwwComponentReturnCode
   **/
  public char ExpEwwComponentReturnCode_AS;
  /**
   * Attribute for: ExpEwwComponentReturnCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpEwwComponentReturnCode;
  /**
   * Attribute missing flag for: ExpEwwComponentReasonCode
   **/
  public char ExpEwwComponentReasonCode_AS;
  /**
   * Attribute for: ExpEwwComponentReasonCode
   * Domain: Number
   * Length: 5
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public int ExpEwwComponentReasonCode;
  /**
   * Attribute missing flag for: ExpEwwComponentSeverityCode
   **/
  public char ExpEwwComponentSeverityCode_AS;
  /**
   * Attribute for: ExpEwwComponentSeverityCode
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpEwwComponentSeverityCode;
  /**
   * Attribute missing flag for: ExpEwwComponentRollbackIndicator
   **/
  public char ExpEwwComponentRollbackIndicator_AS;
  /**
   * Attribute for: ExpEwwComponentRollbackIndicator
   * Domain: Text
   * Length: 1
   * Varying Length: N
   **/
  public String ExpEwwComponentRollbackIndicator;
  /**
   * Attribute missing flag for: ExpEwwComponentOriginServid
   **/
  public char ExpEwwComponentOriginServid_AS;
  /**
   * Attribute for: ExpEwwComponentOriginServid
   * Domain: Number
   * Length: 15
   * Decimal Places: 0
   * Decimal Precision: N
   **/
  public double ExpEwwComponentOriginServid;
  // Entity View: EXP
  //        Type: EWW_SUPPLIED
  /**
   * Attribute missing flag for: ExpEwwSuppliedEvaluationDate
   **/
  public char ExpEwwSuppliedEvaluationDate_AS;
  /**
   * Attribute for: ExpEwwSuppliedEvaluationDate
   * Domain: Date
   * Length: 8
   **/
  public int ExpEwwSuppliedEvaluationDate;
  // Repeating GV:  EXP_GRP_BASE_CODES
  //     Repeats: 100 times
  /**
   * Repeating group view count
   **/
  public int ExpGrpBaseCodes_MA;
  /**
   * Repeating group view occurrance array
   **/
  public char ExpGrpBaseCodes_AC[] = new char[100];
  // Entity View: EXP_GRP_BASE_CODE
  //        Type: ICH1_CHARGE_BASE
  /**
   * Attribute missing flag for: ExpGrpBaseCodeIch1ChargeBaseBaseCode
   **/
  public char ExpGrpBaseCodeIch1ChargeBaseBaseCode_AS[] = new char[100];
  /**
   * Attribute for: ExpGrpBaseCodeIch1ChargeBaseBaseCode
   * Domain: Text
   * Length: 6
   * Varying Length: N
   **/
  public String ExpGrpBaseCodeIch1ChargeBaseBaseCode[] = new String[100];
  /**
   * Attribute missing flag for: ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode
   **/
  public char ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode_AS[] = new char[100];
  /**
   * Attribute for: ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode
   * Domain: Text
   * Length: 6
   * Varying Length: N
   **/
  public String ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode[] = new String[100];
  /**
   * Default Constructor
   **/
  
  public B25EX709_OA()
  {
    reset();
  }
  /**
   * Copy Constructor
   **/
  
  public B25EX709_OA(B25EX709_OA orig)
  {
    copyFrom(orig);
  }
  /**
   * Static instance creator function
   **/
  
  public static B25EX709_OA getInstance()
  {
    return new B25EX709_OA();
  }
  /**
   * Static free instance method
   **/
  
  public void freeInstance()
  {
  }
  /**
   * clone constructor
   **/
  
  @Override public Object clone()
  	throws CloneNotSupportedException
  {
    return(new B25EX709_OA(this));
  }
  /**
   * Resets all properties to the defaults.
   **/
  
  public void reset()
  {
    ExpEwwComponentReturnCode_AS = ' ';
    ExpEwwComponentReturnCode = 0;
    ExpEwwComponentReasonCode_AS = ' ';
    ExpEwwComponentReasonCode = 0;
    ExpEwwComponentSeverityCode_AS = ' ';
    ExpEwwComponentSeverityCode = " ";
    ExpEwwComponentRollbackIndicator_AS = ' ';
    ExpEwwComponentRollbackIndicator = " ";
    ExpEwwComponentOriginServid_AS = ' ';
    ExpEwwComponentOriginServid = 0.0;
    ExpEwwSuppliedEvaluationDate_AS = ' ';
    ExpEwwSuppliedEvaluationDate = 00000000;
    ExpGrpBaseCodes_MA = 0;
    for(int a = 0; a < 100; a++)
    {
      ExpGrpBaseCodes_AC[a] = ' ';
      ExpGrpBaseCodeIch1ChargeBaseBaseCode_AS[a] = ' ';
      ExpGrpBaseCodeIch1ChargeBaseBaseCode[a] = "      ";
      ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode_AS[a] = ' ';
      ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode[a] = "      ";
    }
  }
  /**
   * Sets the current state of the instance to the VDF version.
   **/
  public void setFromVDF(VDF vdf)
  {
    throw new RuntimeException("can only execute setFromVDF for a Procedure Step.");
  }
  
  /**
   * Gets the VDF version of the current state of the instance.
   **/
  public VDF getVDF()
  {
    throw new RuntimeException("can only execute getVDF for a Procedure Step.");
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(IExportView orig)
  {
    this.copyFrom((B25EX709_OA) orig);
  }
  
  /**
   * Sets the current instance based on the passed view.
   **/
  public void copyFrom(B25EX709_OA orig)
  {
    ExpEwwComponentReturnCode_AS = orig.ExpEwwComponentReturnCode_AS;
    ExpEwwComponentReturnCode = orig.ExpEwwComponentReturnCode;
    ExpEwwComponentReasonCode_AS = orig.ExpEwwComponentReasonCode_AS;
    ExpEwwComponentReasonCode = orig.ExpEwwComponentReasonCode;
    ExpEwwComponentSeverityCode_AS = orig.ExpEwwComponentSeverityCode_AS;
    ExpEwwComponentSeverityCode = orig.ExpEwwComponentSeverityCode;
    ExpEwwComponentRollbackIndicator_AS = orig.ExpEwwComponentRollbackIndicator_AS;
    ExpEwwComponentRollbackIndicator = orig.ExpEwwComponentRollbackIndicator;
    ExpEwwComponentOriginServid_AS = orig.ExpEwwComponentOriginServid_AS;
    ExpEwwComponentOriginServid = orig.ExpEwwComponentOriginServid;
    ExpEwwSuppliedEvaluationDate_AS = orig.ExpEwwSuppliedEvaluationDate_AS;
    ExpEwwSuppliedEvaluationDate = orig.ExpEwwSuppliedEvaluationDate;
    ExpGrpBaseCodes_MA = orig.ExpGrpBaseCodes_MA;
    for(int a = 0; a < 100; a++)
    {
      ExpGrpBaseCodes_AC[a] = orig.ExpGrpBaseCodes_AC[a];
      ExpGrpBaseCodeIch1ChargeBaseBaseCode_AS[a] = orig.ExpGrpBaseCodeIch1ChargeBaseBaseCode_AS[a];
      ExpGrpBaseCodeIch1ChargeBaseBaseCode[a] = orig.ExpGrpBaseCodeIch1ChargeBaseBaseCode[a];
      ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode_AS[a] = orig.ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode_AS[a];
      ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode[a] = orig.ExpGrpBaseCodeIch1ChargeBaseOwningChargeCode[a];
    }
  }
}
