       IDENTIFICATION DIVISION.
       PROGRAM-ID.  B04EX202.
      ******************************************************************
      *                                                                *
      *                    Source Code Generated by                    *
      *                           CA Gen r8                            *
      *                                                                *
      *          Copyright (c) 2014 CA. All rights reserved.           *
      *                                                                *
      *    Name: B04EX202_GET_DA_VALUE_PAIRS      Date: 2014/04/10     *
      *    Target OS:   MVS                       Time: 05:00:59       *
      *    Target DBMS: DB2 z/OS                  User: lzr7bqx        *
      *                                                                *
      *    Generation options:                                         *
      *    Debug trace option selected                                 *
      *    Data modeling constraint enforcement not selected           *
      *    Optimized import view initialization selected               *
      *    High performance view passing selected                      *
      *    LAST-STATEMENT-NUM execution selected                       *
      *    Enforce default values with DBMS selected                   *
      *    Init unspecified optional fields to NULL not selected       *
      *    Dynamic link (z/OS) property set to "Compatibility"         *
      *                                                                *
      ******************************************************************
      ******************************************************************
      *       PROGRAM TITLE: GET_DA_VALUE_PAIRS                        *
      *       ANALYST      : AMULYA PHANIBHATLA                        *
      *       PROGRAM OVERVIEW:                                        *
      *       ----------------                                         *
      *    CoolGen Routine B04EX202.                                   *
      *                                                                *
      *    Name: B04EX202_GET_DA_VALUE_PAIRS      Date: 2014/04/10     *
      *    Target                                                      *
      *    Target DBMS: DB2                       User: EXT9LAP        *
      *    *************************************************************
      *    THIS Program WILL PERFORM THE FOLLOWING:                    *
      *                                                                *
      *    FOR THE IMPORT TABLE CODE                                   *
      *    - RETRIEVE CODE VALUE PAIRS                                 *
      *      FROM TBL_DA_TABLE_PAIRS                                   *
      *    - FORMAT RECORD(S) FOR EXPORTING                            *
      *                                                                *
      *       INITIATED by ...N/A                                      *
      *                                                                *
      *       INPUT/S                                                  *
      *       -------                                                  *
      *       INPUTS from ...LINKAGE SECTION                           *
      *                                                                *
      *       OUTPUT/S                                                 *
      *       --------                                                 *
      *    AT END OF PROCESSING                                        *
      *    - SEND RETURN CODE/ REASON CODE                             *
      *                                                                *
      ******************************************************************
       EJECT.
      ******************************************************************
      *                                                                *
      *  MAINTENANCE HISTORY                                           *
      *                                                                *
      *  MRF/RAF    DATE    INT  LVL   COMMENTS                        *
      *  _______ _________ ____ _____ _________________________        *
      *  SR82031  04/10/14  LAP  001   NEW PROGRAM                     *
      *                                                                *
      ******************************************************************
      ******************************************************************
      *                                                                *
      *                   ABEND CODES                                  *
      * ABEND CODES NOT REQUIRED AS THIS PROGRAM IS USED IN BOTH ONLINE*
      * AND BATCH PROGRAMS. IN CASE OF ANY ERROR THIS PROGRAM WILL     *
      * RETURN NEGATIVE RETURN CODE.                                   *
      ******************************************************************
      ******************************************************************
      *                    ENVIRONMENT DIVISION                        *
      ******************************************************************
       ENVIRONMENT DIVISION.
      ******************************************************************
      *                    DATA DIVISION                               *
      ******************************************************************
       DATA DIVISION.
      ******************************************************************
      *                    WORKING-STORAGE SECTION                     *
      ******************************************************************
       WORKING-STORAGE SECTION.

       01  FILLER.
           05  FILLER              PIC X(03)   VALUE '** '.
           05  FILLER              PIC X(16)   VALUE 'B 0 4 E X 2 0 2'.
           05  FILLER              PIC X(33)   VALUE
                     ' - WORKING STORAGE BEGINS HERE **'.

       01  WORK-VARIABLES.
           05  WS-SQLCODE          PIC s9(9)   VALUE ZERO.
           05  WS-CURRENT-DATE     PIC 9(08)   VALUE ZERO.
           05  WS-TODAY            PIC X(10)   VALUE SPACES.
           05  WS-MAX-LENGTH       PIC 9(04)   VALUE ZERO.
           05  WS-POS              PIC 9(04)   VALUE ZERO.
      ******************************************************************
      *     INDICATORS
      ******************************************************************

       01  INDICATORS.

           05  WS-END-OF-TABLE       PIC X(01).
               88  END-OF-TABLE       VALUE 'Y'.
           05  WS-RECORD-FOUND       PIC X(01).
               88  RECORD-FOUND       VALUE 'Y'.
           05  WS-INSTANCE-FOUND     PIC X(01).
               88  INSTANCE-ID-FOUND  VALUE 'Y'.

       01  RECORDS-READ              PIC 9(03).
      ******************************************************************
      *     SUBSCRIPTS                                                 *
      ******************************************************************

       01  SUBSCRIPTS.
           05  SUB-1                 PIC 9(04)  VALUE ZERO.
           05  SUB-2                 PIC 9(04)  VALUE ZERO.

       01  COUNTERS.
           05  INDX1                 PIC 9(04)  VALUE ZERO.
           05  INDX2                 PIC 9(04)  VALUE ZERO.
           05  INDX3                 PIC 9(04)  VALUE ZERO.

      ******************************************************************
      *                                                                *
      *  VARIABLE DECLARATION                                          *
      *                                                                *
      ******************************************************************

       01  H-VALUEPAIR.
           05  H-TABLE-CODE          PIC X(6).
           05  H-CURRENT-DATE        PIC X(10).
           05  H-EVALUATION-DATE     PIC X(10).

       01  WORK-VAR-DATA.
           05  TEXT-LENGTH         PIC S9(4) USAGE COMP.
           05  WORK-DATA.
               10  WT-CHARACTER    OCCURS 1 TO 32684 TIMES
                                   DEPENDING ON TEXT-LENGTH
                                   PIC X(1).
       01  SEQUENCE-NUMBER         PIC 9(02).

       01  WS-DATA-RECORD.
           05  TABLE_PAIR_INSTN       PIC S9(15)V USAGE COMP.
           05  VALUEPAIR-COUNT        PIC 9(4).
           05  VALUEPAIR-LIST.
               10  VALUEPAIR-DATA OCCURS 225.
                   15  RD-VALUE-PAIR-INSTN   PIC S9(15)V USAGE COMP.
                   15  RD-TABLE-CODE-FROM    PIC X(6).
                   15  RD-TABLE-CODE-TO      PIC X(6).
                   15  RD-VALUE-CODE-FROM    PIC X(6).
                   15  RD-VALUE-CODE-TO      PIC X(6).
                   15  RD-VALUE-PAIR-NAME    PIC X(35).
                   15  RD-SHORT-DESCRIPTION  PIC X(65).
                   15  RD-DELETED-IND        PIC X(1).
                   15  RD-ACTIVATE-DATE      PIC X(10).
                   15  RD-EFFECTIVE-DATE     PIC X(10).
                   15  RD-EFFECTIVE-END-DATE PIC X(10).

       01  WORK-VALUEPAIR-DATA.
           05  WS-VALUEPAIR-DATA OCCURS 1 TO 2000 TIMES
                          DEPENDING ON WS-MAX-LENGTH.
               10  WS-VALUE-PAIR-INSTN   PIC S9(15)V USAGE COMP.
               10  WS-TABLE-CODE-FROM    PIC X(6).
               10  WS-TABLE-CODE-TO      PIC X(6).
               10  WS-VALUE-CODE-FROM    PIC X(6).
               10  WS-VALUE-CODE-TO      PIC X(6).
               10  WS-VALUE-PAIR-NAME    PIC X(35).
               10  WS-SHORT-DESCRIPTION  PIC X(65).
               10  WS-DELETED-IND        PIC X(1).
               10  WS-ACTIVATE-DATE      PIC X(10).
               10  WS-EFFECTIVE-DATE     PIC X(10).
               10  WS-EFFECTIVE-END-DATE PIC X(10).
       EJECT
      ******************************************************************
      *                                                                *
      *               WORKING STORAGE FOR DB2 ERROR ROUTINE            *
      *                                                                *
      ******************************************************************

       COPY ER01COB.

       EJECT.
      ******************************************************************
      *                                                                *
      *  DECLARE SQL COMMUNICATIONS AREA                               *
      *                                                                *
      ******************************************************************
           EXEC SQL
                INCLUDE SQLCA
           END-EXEC.

       EJECT.
      ******************************************************************
      *                                                                *
      *  TBL_DA_TABLE_PAIRS                                            *
      *                                                                *
      ******************************************************************

           EXEC SQL
               INCLUDE DBTBL06
           END-EXEC.

           EXEC SQL
               INCLUDE DBTBL06G
           END-EXEC.

       EJECT.
      ******************************************************************
      *                                                                *
      *  DB2 CURSOR                                                    *
      *                                                                *
      ******************************************************************

           EXEC SQL
            DECLARE  DATABLEPAIR CURSOR FOR
            SELECT   TABLE_CODE
                    ,SEQUENCE_NUMBER
                    ,ACTIVATE_DATE
                    ,EFFECTIVE_DATE
                    ,EFFECTIVE_END_DATE
                    ,DATA
            FROM     TBL_DA_TABLE_PAIRS
            WHERE    TABLE_CODE = :H-VALUEPAIR.H-TABLE-CODE
             AND    ACTIVATE_DATE <= :H-VALUEPAIR.H-CURRENT-DATE
             AND    EFFECTIVE_DATE <= :H-VALUEPAIR.H-EVALUATION-DATE
             AND    EFFECTIVE_END_DATE >= :H-VALUEPAIR.H-EVALUATION-DATE
             WITH UR
           END-EXEC.
       EJECT
      *
       01  FILLER.
           03  ADIM1                    PIC S9(8)   COMP.
           03  ADIM2                    PIC S9(8)   COMP.
           03  ADIM3                    PIC S9(8)   COMP.
      * * * * * * * * * * * * * * * * * * * *
      * REPEATING GROUP VIEW STATUS FIELDS
      * * * * * * * * * * * * * * * * * * * *
       01  FILLER.
           03  EXP-GRP-VALUE-PAIRS-0001FL  PIC X(1).
           03  EXP-GRP-VALUE-PAIRS-0001PS  PIC S9(4) COMP.
           03  EXP-GRP-VALUE-PAIRS-0001RF  PIC X(1).
           03  EXP-GRP-VALUE-PAIRS-0001MM  PIC S9(9) VALUE 200 COMP.
      ******************************************************************
      *                    LINKAGE SECTION                             *
      ******************************************************************

       LINKAGE SECTION.
       01  IEF-RUNTIME-PARM1  PIC X(1).
       01  IEF-RUNTIME-PARM2  PIC X(1).
      *
       01  GLOBDATA.
           03  PSMGR-IEF-COMMAND.
             05  PSMGR-IEF-COMMAND-1    PIC X(8).
             05  PSMGR-IEF-COMMAND-2    PIC X(72).
      *                             IEF-COMMAND
           03  PSMGR-IEF-TRANCODE       PIC X(8).
      *                             IEF-TRANCODE.
           03  PSMGR-EXIT-STATE         PIC S9(11) COMP-3.
      *                             EXIT STATE
           03  PSMGR-EXIT-INFOMSG       PIC X(80).
      *                             EXIT INFOMSG
           03  PSMGR-USER-ID            PIC X(8).
      *                             USER ID
           03  PSMGR-TERMINAL-ID        PIC X(8).
      *                             TERMINAL ID
           03  PSMGR-PRINTER-ID         PIC X(8).
      *                             PRINTER ID
           03  PSMGR-CURRENT-DATE       PIC S9(9) COMP.
      *                             CURRENT DATE (YYYYMMDD)
           03  PSMGR-CURRENT-TIME       PIC S9(9) COMP.
      *                             CURRENT TIME (HHMMSSTH)
           03  PSMGR-RUNTIME-TYPE       PIC X(4).
      *                             CICS, IMS, BATC..ETC
           03  PSMGR-FUNCTION-DATA.
               05  PSMGR-FUNC-ERRMSG    PIC X(4).
      *                             FUNCTION ERROR MSG NUMBER
               05  PSMGR-FUNC-NAME      PIC X(8).
      *                             FUNCTION NAME
               05  PSMGR-FUNC-IN-DATE   PIC X(8).
      *                             INPUT DATE FOR DURATIONS
               05  PSMGR-FUNC-IN-DDURA.
      *                             INPUT LABELED DURATION
                   07  DDURA-YEAR.
                       09  DDURA-Y-MISS PIC X.
                       09  DDURA-YYYY   PIC S9(9) COMP.
                   07  DDURA-MONTH.
                       09  DDURA-M-MISS PIC X.
                       09  DDURA-MM     PIC S9(9) COMP.
                   07  DDURA-DAY.
                       09  DDURA-D-MISS PIC X.
                       09  DDURA-DD     PIC S9(9) COMP.
               05  PSMGR-FUNC-OUT-DATE  PIC X(8).
      *                             OUTPUT DATE FOR DURATIONS
               05  PSMGR-FUNC-IN-TIME   PIC X(6).
      *                             INPUT TIME FOR DURATIONS
               05  PSMGR-FUNC-IN-TDURA.
      *                             INPUT LABELED DURATION
                   07  TDURA-HOUR.
                       09  TDURA-H-MISS PIC X.
                       09  TDURA-HH     PIC S9(9) COMP.
                   07  TDURA-MINUTE.
                       09  TDURA-M-MISS PIC X.
                       09  TDURA-MM     PIC S9(9) COMP.
                   07  TDURA-SECOND.
                       09  TDURA-S-MISS PIC X.
                       09  TDURA-SS     PIC S9(9) COMP.
               05  PSMGR-FUNC-OUT-TIME  PIC X(6).
      *                             OUTPUT TIME FOR DURATIONS
           03  FILLER                   PIC X(2).
      *                             GLOBDATA RELEASE
           03  PSMGR-IEF-NEXTTRAN       PIC X(80).
      *                             IEF-NEXTTRAN
           03  PSMGR-EXIT-MSGTYPE       PIC X(1).
      *                             EXIT INFOMSG TYPE
           03  FILLER                   PIC X(11).
      *                             GROWTH ROOM
           03  PSMGR-IEF-DEBUG-FLAGS.
               05  PSMGR-IEF-DEBUG      PIC X.
                   88  PSMGR-DEBUG-ON         VALUE 'Y'.
      *                             DEBUG FLAG
               05  FILLER               PIC X(15).
      *                             FILLER FOR DEBUG
           03  PSMGR-ENVIRONMENT-DATA.
      *
               05 PSMGR-PCB-CNT         PIC S9(9) COMP SYNC.
               05 PSMGR-PCB-ENTRY             OCCURS 255.
                  07 PSMGR-PCB-ADR      PIC S9(9) COMP SYNC.
      *           07 PSMGR-PCB-PTR            REDEFINES
      *                             PSMGR-PCB-ADR
      *                             POINTER.
      *
           03  PSMGR-EAB-DATA.
      *
               05 PSMGR-EABPCB-CNT      PIC S9(9) COMP SYNC.
               05 PSMGR-EABPCB-ENTRY          OCCURS 255.
                  07 PSMGR-EABPCB-ADR   PIC S9(9) COMP SYNC.
      *           07 PSMGR-EABPCB-PTR         REDEFINES
      *                             PSMGR-EABPCB-ADR
      *                             POINTER.
      *
           03  PSMGR-ERROR-DATA.
      *
               05 ERROR-ACTION-NAME     PIC X(32).
               05 ERROR-ENCOUNTERED-SW  PIC X.
               05 VIEW-OVERFLOW-SW      PIC X.
      *
           03  PSMGR-DASG-DATA.
      *
               05 ACTION-ID-X.
                  07 ACTION-ID          PIC 9(10).
               05 ATTRIBUTE-ID-X.
                  07 ATTRIBUTE-ID       PIC 9(10).
               05 STATUS-FLAG           PIC XX.
                  88 WHEN-SUCCESSFUL-SF          VALUE SPACES.
                  88 FATAL-ERROR-SF              VALUE 'FE'.
                  88 DB-ERROR-SF                 VALUE 'DB'.
                  88 ABORT-SHOW-DBMS-MSG-SF      VALUE 'AB'.
                  88 ABORT-SHOW-USER-MSG-SF      VALUE 'AM'.
                  88 RETRY-TRAN-REQUESTED-SF     VALUE 'RT'.
                  88 PSTEP-USE-FAILURE           VALUE 'PU'.
                  88 ASYNC-WHEN-AVAILABLE-SF     VALUE SPACES.
                  88 ASYNC-WHEN-ACCEPTED-SF      VALUE SPACES.
                  88 ASYNC-WHEN-NOT-ACCEPTED-SF  VALUE 'NA'.
                  88 ASYNC-WHEN-INVALID-ID-SF    VALUE 'II'.
                  88 ASYNC-WHEN-PENDING-SF       VALUE 'PE'.
                  88 ASYNC-WHEN-SERVER-ERROR-SF  VALUE 'SS'.
                  88 ASYNC-WHEN-COMM-ERROR-SF    VALUE 'CE'.
               05 LAST-STATUS           PIC XX.
                  88 DB-ERROR-FL-LS              VALUE 'DB'.
                  88 DB-DEADLOCK-TIMOUT-FL-LS    VALUE 'DT'.
                  88 DUPLICATE-FOUND-FL-LS       VALUE 'DF'.
                  88 INVALID-DATAA-FL-LS         VALUE 'IA'.
                  88 INVALID-DATAB-TYPE-FL-LS    VALUE 'BT'.
                  88 INVALID-DATAB-PERM-FL-LS    VALUE 'BP'.
                  88 FATAL-ERROR-FL-LS           VALUE 'FE'.
                  88 NOT-FOUND-FL-LS             VALUE 'NF'.
                  88 NOT-UNIQUE-FL-LS            VALUE 'NU'.
                  88 IEF-FUNCTION-ERROR-FL-LS    VALUE 'IE'.
                  88 IEF-DURATION-ERROR-FL-LS    VALUE 'DE'.
                  88 USED-PSTEP-NOT-FOUND        VALUE 'PO'.
                  88 USED-PSTEP-ROUTING-ERR      VALUE 'PX'.
                  88 USED-PSTEP-SND-FMT-ERR      VALUE 'PF'.
                  88 USED-PSTEP-ENCRYPT-ERR      VALUE 'PN'.
                  88 USED-PSTEP-SND-BFR-ERR      VALUE 'PS'.
                  88 USED-PSTEP-RCV-BFR-ERR      VALUE 'PR'.
                  88 USED-PSTEP-RCV-FMT-ERR      VALUE 'PU'.
                  88 USED-PSTEP-TIRSECR-ERR      VALUE 'PE'.
                  88 USED-PSTEP-TOKEN-ERR        VALUE 'PT'.
                  88 USED-PSTEP-SEND-MAX-SIZE    VALUE 'PM'.
                  88 USED-PSTEP-SECG-ERR         VALUE 'PB'.
                  88 USED-PSTEP-ALLOC-ERR        VALUE 'PA'.
                  88 USED-PSTEP-CONNECT-ERR      VALUE 'PC'.
                  88 USED-PSTEP-XERR             VALUE 'PD'.
                  88 USED-PSTEP-RCV-UA-ERR       VALUE 'PH'.
                  88 USED-PSTEP-RCV-ES-ERR       VALUE 'PI'.
                  88 USED-PSTEP-XFAL             VALUE 'PJ'.
                  88 USED-PSTEP-SETOA-ERR        VALUE 'PK'.
                  88 USED-PSTEP-RCV-VIEW-ERR     VALUE 'PL'.
                  88 USED-PSTEP-DECRYPT-ERR      VALUE 'PP'.
               05 SAVE-SQLCA            PIC X(255).
      *
           03  PSMGR-DEBUG-DATA.
      *
               05 PSMGR-TRACE-ADR       PIC S9(9) COMP SYNC.
      *        05 PSMGR-TRACE-PTR             REDEFINES
      *                             PSMGR-TRACE-ADR
      *                             POINTER.
               05 LAST-STATEMENT-X.
                  07 LAST-STATEMENT-NUM PIC 9(10).
               05 CUR-AB-ID             PIC X(10).
               05 CUR-AB-NAME           PIC X(32).
      *
           03  PSMGR-TIRDATE-SAVEAREA  PIC X(12).
           03  PSMGR-TIRDATE-CMCB.
             05  PSMGR-TIRDATE-DATE  PIC S9(9) COMP.
      *            DATE INPUT / SYSTEM DATE RETURNED
             05  PSMGR-TIRDATE-TIME  PIC S9(9) COMP.
      *            TIME INPUT / SYSTEM TIME RETURNED
             05  FILLER  PIC S9(18) COMP.
      *            TIRDATE INTERNAL USE
             05  PSMGR-TIRDATE-INC  PIC S9(9) COMP.
      *            INCREMENT OF DAYS TO BE ADDED TO DATE
             05  PSMGR-TIRDATE-RC  PIC S9(4) COMP.
               88  PSMGR-TIRDATE-OK       VALUE +0.
               88  PSMGR-TIRDATE-WARNING  VALUE +4.
               88  PSMGR-TIRDATE-ERROR    VALUE +8.
             05  PSMGR-TIRDATE-REQ  PIC 9(1).
      *            0=VALIDATE INPUT DATE AND/OR TIME
      *            1=RETURN SYSTEM DATE AND TIME
      *            2=ADD INCREMENT OF DAYS TO INPUT DATE
      *            3=ADD INCREMENT OF DAYS TO SYSTEM DATE
      *            4=CONVERT  CYYMMDD TO TIRDATE_DATEF FORMAT
      *            5=CONVERT YYYYMMDD TO TIRDATE_DATEF FORMAT
      *            6=VALIDATE INPUT TIMESTAMP
      *            7=RETURN SYSTEM TIMESTAMP
             05  PSMGR-TIRDATE-DATEF  PIC 9(1).
      *            DATE FORMAT 0=YYYYMMDD, 1=CYYMMDD, 2=YYMMDD
             05  PSMGR-TIRDATE-TIMEF  PIC 9(1).
      *            TIME FORMAT 0=HHMMSSTH, 1=HHMMSST, 2=HHMMSS
             05  PSMGR-TIRDATE-RETMSG  PIC X(60).
      *            ERROR MESSAGE IF RC > 0
             05  PSMGR-TIRDATE-TSTAMP  PIC X(20).
      *            TIMESTAMP FORMAT = YYYYMMDDHHMISSTHNNNN
             05  FILLER  REDEFINES  PSMGR-TIRDATE-TSTAMP.
               07  PSMGR-TIRDATE-DATE-Z  PIC 9(8).
               07  PSMGR-TIRDATE-TIME-Z  PIC 9(8).
               07  FILLER  PIC X(4).
             05  PSMGR-TIRDATE-SKIP-VAL  PIC X(1).
      *            Y=DON'T VALIDATE INPUT DATE AND/OR TIME YET;
      *              THIS TIRDATE CALL IS FOR AN INTERMEDIATE
      *              RESULT, AND ANOTHER CALL FOLLOWS
             05  FILLER  PIC X(95).
      *
           03  PSMGR-ROLLBACK-RQSTED    PIC X.
               88 ROLLBACK-RQSTED             VALUE 'R'.
               88 ABEND-RQSTED                VALUE 'A'.
               88 TERMINATE-RQSTED            VALUE 'T'.
      *
           03  TIRTRCE-SAVE-AREA.
               05  TOP-INDX             PIC S9(9) COMP.
               05  BOTTOM-INDX          PIC S9(9) COMP.
               05  END-INDX             PIC S9(9) COMP.
               05  LAST-STMT            PIC 9(9) COMP.
               05  TOP-OF-CALL          PIC S9(9) COMP.
               05  TRACE-BREAK-POINT    PIC S9(9) COMP.
               05  TRACE-BREAK-POINT-STATUS  PIC X(3).
               05  LAST-AB-NAME         PIC X(32).
               05  COLOR                PIC X(15).
               05  COLORT               PIC X(15).
               05  HILITE               PIC X(15).
               05  TRACE-ON-OFF         PIC X(3).
      *
           03  CASCADE-DELETE-FLAGS.
               05  V1PRESENT            PIC X.
               05  V2PRESENT            PIC X.
               05  CASCADE1             PIC X.
               05  CASCADE2             PIC X.
               05  PROCESSQ-FLAG        PIC X.
      *
           03  PSMGR-ACTIVE-DIALECT.
               05  DIALECT-NAME         PIC X(8).
               05  MESSAGE-TABLE-NAME   PIC X(8).
               05  TRANSLATE-TABLE-NAME PIC X(8).
           03  PSMGR-FUNCTION-DATA-EXT.
               05  PSMGR-FUNC-IN-TIMESTAMP PIC X(20).
      *                             INPUT TIMESTAMP FOR DURATIONS
               05  PSMGR-FUNC-IN-TSDURA.
      *                             INPUT LABELED DURATION
                   07  TSDURA-MICROSECOND.
                       09  TSDURA-M-MISS PIC X.
                       09  TSDURA-MS    PIC S9(9) COMP.
               05  PSMGR-FUNC-OUT-TIMESTAMP  PIC X(20).
      *                             OUTPUT TIMESTAMP FOR DURATIONS
           03  FILLER                   PIC X(8).
      *                             RESERVED
           03  PSMGR-CICS-FAIL-SW            PIC X(1).
               88 INHIBIT-CICS-RECEIVE       VALUE 'I'.
      *                             TIRFAIL PARAMETER FOR CICS
           03  CLIENT-USERID                 PIC X(64).
      *                             CLIENT USER ID
           03  CLIENT-PASSWORD               PIC X(64).
      *                             CLIENT PASSWORD
           03  LOAD-MODULE-NAME              PIC X(8).
      *                             CURRENT LOAD MODULE NAME
           03  INSTRUMENT-CODE               PIC S9(9) COMP.
      *                             INSTRUMENT CODE BIT-MASK
           03  TX-RETRY-LIMIT                PIC S9(9) COMP.
      *                             TRANSACTION RETRY LIMIT
           03  TX-TIMEOUT                    PIC S9(9) COMP.
      *                             PROC STEP TRANSACTION
      *                             TIMEOUT
           03  PSMGR-EXTRA-ERRINFO.
      *                             EXTRA ERROR INFO SECTION
               05  ERRINFO-BUF-SIZE          PIC S9(9) COMP.
      *                             TOTAL BUFFER SIZE
               05  ERRINFO-MSG-SIZE          PIC S9(9) COMP.
      *                             MSG SIZE IN BUFFER
               05  ERRINFO-BUF-ADDR          PIC X(8).
      *                             BUFFER ADDRESS, 64 BITS
           03  TX-RETRY-COUNT                PIC S9(9) COMP.
      *                             TRANSACTION RETRY COUNT
           03  TX-USER-RETRY-ALLOWED         PIC X.
      *                             'Y' IF COOL:GEN 4.2 OR
      *                             LATER
           03  FILLER                   PIC X(3).
           03  PSMGR-PSTEP-USE-PTRS.
               05  PSTEP-FAIL-MSG-PTR        POINTER.
               05  PSTEP-GURB-REST-PTR       POINTER.
               05  PSTEP-LIPS-PTR            POINTER.
               05  PSTEP-TBL-PTR             POINTER.
               05  PSTEP-DDF-PTR             POINTER.
               05  PSTEP-COMM-ID             PIC X(08).
               05  PSTEP-APPL-LIST-PTR       POINTER.
               05  PSTEP-CURR-PST-PTR        POINTER.
      *
           03  PSMGR-PSTEP-USE-SYSFLDS.
      *                             PSTEP USE TP FIELDS
               05  PSMGR-EIBERRCD            PIC X(04).
      *                             CICS EIBERRCD
               05  PSMGR-EIBFN               PIC X(02).
      *                             CICS EIBFN
               05  PSMGR-EIBRESP             PIC X(08).
      *                             CICS EIBRESP
               05  PSMGR-EIBRESP2            PIC X(08).
      *                             CICS EIBRESP2
           03  PSMGR-ASYNC-DATA.
               05  ASYNC-MODE                 PIC X.
                   88  FLOW-TYPE-SYNC             VALUE SPACE.
                   88  FLOW-TYPE-ASYNC            VALUE 'A'.
                   88  FLOW-TYPE-NO-RESPONSE      VALUE 'N'.
               05  FILLER                     PIC X.
               05  ASYNC-FLOW-STATUS-TABLE-PTR    POINTER.
               05  ASYNC-SERVER-LOC-TABLE-PTR     POINTER.

           03  PSMGR-HEAP.
               05  HEAP-CFB.
                   07  HEAP-CFB-ADDR          POINTER.
                   07  HEAP-CFB-ADDR-RESV     PIC S9(9) BINARY.
                   07  HEAP-CFB-ID            PIC S9(9) BINARY.
                   07  HEAP-CFB-LEN           PIC S9(9) BINARY.
               05  HEAP-WGLOB.
                   07  HEAP-WGLOB-ADDR        POINTER.
                   07  HEAP-WGLOB-ADDR-RESV   PIC S9(9) BINARY.
                   07  HEAP-WGLOB-ID          PIC S9(9) BINARY.
                   07  HEAP-WGLOB-LEN         PIC S9(9) BINARY.
           03  FILLER                   PIC X(157).
      *                             GROWTH ROOM

      * * * * * * * * * * * * * * * * * * * *
      * START OF IMPORT VIEWS
      * * * * * * * * * * * * * * * * * * * *
       01  IMPORT-0001EV.
           03  EWW-SUPPLIED-0001ET.
             05  EVALUATION-DATE-0001AS  PIC X(1).
             05  EVALUATION-DATE-0001  PIC S9(8).
             05  EVALUATION-DATE-0001XX  REDEFINES
                 EVALUATION-DATE-0001  PIC X(8).
       01  IMPORT-0002EV.
           03  CODE-TABLE-PAIR-0002ET.
             05  CODE-TABLE-PAIR-TYPE-CO-0003AS  PIC X(1).
             05  CODE-TABLE-PAIR-TYPE-CODE-0003  PIC X(6).
             05  CODE-TABLE-PAIR-TYPE-CO-0003XX  REDEFINES
                 CODE-TABLE-PAIR-TYPE-CODE-0003  PIC X(6).
       01  IMPORT-NEXT-0004EV.
           03  CODE-VALUE-PAIR-0004ET.
             05  CODE-VALUE-PAIR-INSTANC-0005AS  PIC X(1).
             05  CODE-VALUE-PAIR-INSTANCE--0005  PIC S9(15).
             05  CODE-VALUE-PAIR-INSTANC-0005XX  REDEFINES
                 CODE-VALUE-PAIR-INSTANCE--0005  PIC X(15).
      * * * * * * * * * * * * * * * * * * * *
      * START OF EXPORT VIEWS
      * * * * * * * * * * * * * * * * * * * *
       01  EXP-0006EV.
           03  EWW-COMPONENT-0006ET.
             05  RETURN-CODE-0006AS  PIC X(1).
             05  RETURN-CODE-0006  PIC S9(5).
             05  RETURN-CODE-0006XX  REDEFINES  RETURN-CODE-0006  PIC
                 X(5).
             05  REASON-CODE-0006AS  PIC X(1).
             05  REASON-CODE-0006  PIC S9(5).
             05  REASON-CODE-0006XX  REDEFINES  REASON-CODE-0006  PIC
                 X(5).
             05  SEVERITY-CODE-0006AS  PIC X(1).
             05  SEVERITY-CODE-0006  PIC X(1).
             05  SEVERITY-CODE-0006XX  REDEFINES  SEVERITY-CODE-0006
                 PIC X(1).
             05  ROLLBACK-INDICATOR-0006AS  PIC X(1).
             05  ROLLBACK-INDICATOR-0006  PIC X(1).
             05  ROLLBACK-INDICATOR-0006XX  REDEFINES
                 ROLLBACK-INDICATOR-0006  PIC X(1).
             05  ORIGIN-SERVID-0006AS  PIC X(1).
             05  ORIGIN-SERVID-0006  PIC S9(15).
             05  ORIGIN-SERVID-0006XX  REDEFINES  ORIGIN-SERVID-0006
                 PIC X(15).
       01  EXP-0007EV.
           03  EWW-SUPPLIED-0007ET.
             05  EVALUATION-DATE-0007AS  PIC X(1).
             05  EVALUATION-DATE-0007  PIC S9(8).
             05  EVALUATION-DATE-0007XX  REDEFINES
                 EVALUATION-DATE-0007  PIC X(8).
             05  NEXT-GROUP-IND-0007AS  PIC X(1).
             05  NEXT-GROUP-IND-0007  PIC X(1).
             05  NEXT-GROUP-IND-0007XX  REDEFINES  NEXT-GROUP-IND-0007
                 PIC X(1).
       01  EXP-GRP-VALUE-PAIRS-0001RG.
           03  EXP-GRP-VALUE-PAIRS-0001MA  PIC S9(4).
           03  EXP-GRP-VALUE-PAIRS-0001MX  REDEFINES
               EXP-GRP-VALUE-PAIRS-0001MA  PIC X(4).
           03  EXP-GRP-VALUE-PAIRS-0001  OCCURS  200.
             05  EXP-GRP-VALUE-PAIRS-0001AC  PIC X(1).
             05  EXP-GRP-VALUE-PAIR-0008EV.
               07  CODE-VALUE-PAIR-0008ET.
                 09  CODE-VALUE-PAIR-INSTANC-0009AS  PIC X(1).
                 09  CODE-VALUE-PAIR-INSTANCE--0009  PIC S9(15).
                 09  CODE-VALUE-PAIR-INSTANC-0009XX  REDEFINES
                     CODE-VALUE-PAIR-INSTANCE--0009  PIC X(15).
                 09  FROM-CODE-TABLE-CODE-0009AS  PIC X(1).
                 09  FROM-CODE-TABLE-CODE-0009  PIC X(6).
                 09  FROM-CODE-TABLE-CODE-0009XX  REDEFINES
                     FROM-CODE-TABLE-CODE-0009  PIC X(6).
                 09  TO-CODE-TABLE-CODE-0009AS  PIC X(1).
                 09  TO-CODE-TABLE-CODE-0009  PIC X(6).
                 09  TO-CODE-TABLE-CODE-0009XX  REDEFINES
                     TO-CODE-TABLE-CODE-0009  PIC X(6).
                 09  FROM-CODE-VALUE-CODE-0009AS  PIC X(1).
                 09  FROM-CODE-VALUE-CODE-0009  PIC X(6).
                 09  FROM-CODE-VALUE-CODE-0009XX  REDEFINES
                     FROM-CODE-VALUE-CODE-0009  PIC X(6).
                 09  TO-CODE-VALUE-CODE-0009AS  PIC X(1).
                 09  TO-CODE-VALUE-CODE-0009  PIC X(6).
                 09  TO-CODE-VALUE-CODE-0009XX  REDEFINES
                     TO-CODE-VALUE-CODE-0009  PIC X(6).
                 09  CODE-VALUE-PAIR-NAME-0009AS  PIC X(1).
                 09  CODE-VALUE-PAIR-NAME-0009  PIC X(35).
                 09  CODE-VALUE-PAIR-NAME-0009XX  REDEFINES
                     CODE-VALUE-PAIR-NAME-0009  PIC X(35).
                 09  SHORT-DESCRIPTION-0009AS  PIC X(1).
                 09  SHORT-DESCRIPTION-0009  PIC X(65).
                 09  SHORT-DESCRIPTION-0009XX  REDEFINES
                     SHORT-DESCRIPTION-0009  PIC X(65).
                 09  HAS-BEEN-DELETED-IND-0009AS  PIC X(1).
                 09  HAS-BEEN-DELETED-IND-0009  PIC X(1).
                 09  HAS-BEEN-DELETED-IND-0009XX  REDEFINES
                     HAS-BEEN-DELETED-IND-0009  PIC X(1).
                 09  ACTIVATE-DATE-0009AS  PIC X(1).
                 09  ACTIVATE-DATE-0009  PIC S9(8).
                 09  ACTIVATE-DATE-0009XX  REDEFINES
                     ACTIVATE-DATE-0009  PIC X(8).
                 09  EFFECTIVE-DATE-0009AS  PIC X(1).
                 09  EFFECTIVE-DATE-0009  PIC S9(8).
                 09  EFFECTIVE-DATE-0009XX  REDEFINES
                     EFFECTIVE-DATE-0009  PIC X(8).
                 09  EFFECTIVE-END-DATE-0009AS  PIC X(1).
                 09  EFFECTIVE-END-DATE-0009  PIC S9(8).
                 09  EFFECTIVE-END-DATE-0009XX  REDEFINES
                     EFFECTIVE-END-DATE-0009  PIC X(8).
      *
      ******************************************************************
      *                    PROCEDURE DIVISION                          *
      ******************************************************************
       PROCEDURE DIVISION USING IEF-RUNTIME-PARM1, IEF-RUNTIME-PARM2,
           GLOBDATA, IMPORT-0001EV, IMPORT-0002EV, IMPORT-NEXT-0004EV,
           EXP-0006EV, EXP-0007EV, EXP-GRP-VALUE-PAIRS-0001RG.

      ******************************************************************
      *                    CONTROL                                     *
      ******************************************************************
       A0000-CONTROL.
      *
      *    DISPLAY 'ENTERING B04EX202.'
      *
           PERFORM B0000-INITIALIZE.
      *
           PERFORM C0000-PROCESS.
      *
           MOVE ZERO TO RETURN-CODE.
      *
           GOBACK.
      *

      *
      ******************************************************************
      *                    PROCESS                                     *
      ******************************************************************
       C0000-PROCESS.

           IF CODE-TABLE-PAIR-TYPE-CODE-0003 = SPACES
               MOVE -20 TO RETURN-CODE-0006
               MOVE +302 TO REASON-CODE-0006
           ELSE
               PERFORM  C1000-PROCESS-DATABLEPAIR
           END-IF.
      *
      ******************************************************************
      *                    PROCESS-DATABLEPAIR                         *
      ******************************************************************
      *
       C1000-PROCESS-DATABLEPAIR.

           MOVE CODE-TABLE-PAIR-TYPE-CODE-0003 TO H-TABLE-CODE.
           MOVE FUNCTION CURRENT-DATE(1:8) TO WS-CURRENT-DATE.
           PERFORM C1100-DATE-FORMAT.
           MOVE WS-TODAY TO H-CURRENT-DATE.
           IF EVALUATION-DATE-0001 = 0
           THEN
               MOVE H-CURRENT-DATE TO H-EVALUATION-DATE
           ELSE
               MOVE EVALUATION-DATE-0001 TO WS-CURRENT-DATE
               PERFORM C1100-DATE-FORMAT
               MOVE WS-TODAY TO H-EVALUATION-DATE
           END-IF.
      *    DISPLAY "H-TABLE-CODE:" H-TABLE-CODE.
      *    DISPLAY "H-CURRENT-DATE:" H-CURRENT-DATE.
      *    DISPLAY "H-EVALUATION-DATE:" H-EVALUATION-DATE.
           PERFORM C1200-OPEN-DATABLEPAIR.
      *
      ******************************************************************
      *                    DATE-FORMAT                                 *
      ******************************************************************
       C1100-DATE-FORMAT.

           MOVE WS-CURRENT-DATE(1:4) TO WS-TODAY(1:4).
           MOVE "-" TO WS-TODAY(5:1).
           MOVE WS-CURRENT-DATE(5:2) TO WS-TODAY(6:2).
           MOVE "-" TO WS-TODAY(8:1).
           MOVE WS-CURRENT-DATE(7:2) TO WS-TODAY(9:2).

      ******************************************************************
      *                    OPEN-DATABLEPAIR                            *
      ******************************************************************
       C1200-OPEN-DATABLEPAIR.

           EXEC SQL
               OPEN DATABLEPAIR
           END-EXEC.
           IF SQLCODE = 0

               PERFORM C1210-PROCESS-FETCH
                      UNTIL END-OF-TABLE
               PERFORM C1220-PROCESS-DATA
               PERFORM C1230-CLOSE-DATABLEPAIR

           ELSE
               MOVE SQLCODE TO WS-SQLCODE
      *        DISPLAY "CURSOR OPEN ERROR", WS-SQLCODE
               MOVE SPACES TO NEXT-GROUP-IND-0007
               MOVE 'FE' TO STATUS-FLAG OF GLOBDATA
               MOVE SQLCA TO SAVE-SQLCA OF GLOBDATA
               MOVE 'DB' TO LAST-STATUS OF GLOBDATA
           END-IF.
      *
      ******************************************************************
      *                    PROCESS-FETCH                               *
      ******************************************************************
       C1210-PROCESS-FETCH.

           PERFORM C1211-FETCH-DATABLEPAIR.
           IF NOT END-OF-TABLE
               IF RECORD-FOUND

                   MOVE TBL06-SEQUENCE-NUMBER TO SEQUENCE-NUMBER
                   MOVE SPACES TO WORK-DATA
                   MOVE TBL06-DATA TO WORK-VAR-DATA
                   MOVE WORK-DATA TO WS-DATA-RECORD
                   IF VALUEPAIR-COUNT = 0
                        MOVE +1 TO RETURN-CODE-0006
                        MOVE +2 TO REASON-CODE-0006
                   END-IF
                   COMPUTE WS-MAX-LENGTH
                          = (WS-MAX-LENGTH + VALUEPAIR-COUNT)

                   PERFORM C1212-MOVE-DATA VARYING INDX1 FROM 1 BY 1
                         UNTIL INDX1 > VALUEPAIR-COUNT
               ELSE
      *            DISPLAY "NO RECORDS FOUND"
                   MOVE -20 TO RETURN-CODE-0006
                   MOVE +301 TO REASON-CODE-0006
               END-IF
           END-IF.
      *
      ******************************************************************
      *                    FETCH-DATABLEPAIR                           *
      ******************************************************************
       C1211-FETCH-DATABLEPAIR.

           EXEC SQL
             FETCH DATABLEPAIR
              INTO  :TBL06-TABLE-CODE,
                    :TBL06-SEQUENCE-NUMBER,
                    :TBL06-ACTIVATE-DATE,
                    :TBL06-EFFECTIVE-DATE,
                    :TBL06-EFFECTIVE-END-DATE,
                    :TBL06-DATA
           END-EXEC.

           EVALUATE SQLCODE
               WHEN 0
                    MOVE 'Y' TO WS-RECORD-FOUND
               WHEN +100
                    MOVE 'N' TO WS-RECORD-FOUND
                    MOVE 'Y' TO WS-END-OF-TABLE
               WHEN OTHER
                    MOVE SQLCODE TO WS-SQLCODE
      *             DISPLAY "FETCH DATABLEPAIR ERROR", WS-SQLCODE
                    MOVE 'FE' TO STATUS-FLAG OF GLOBDATA
                    MOVE SQLCA TO SAVE-SQLCA OF GLOBDATA
                    MOVE 'DB' TO LAST-STATUS OF GLOBDATA
           END-EVALUATE.
      ******************************************************************
      *                    MOVE-DATA                                   *
      ******************************************************************
       C1212-MOVE-DATA.

           COMPUTE SUB-1 = (SUB-1 + 1).

           MOVE VALUEPAIR-DATA(INDX1) TO WS-VALUEPAIR-DATA(SUB-1).
      *
      ******************************************************************
      *                    PROCESS-DATA                                *
      ******************************************************************
       C1220-PROCESS-DATA.

           IF CODE-VALUE-PAIR-INSTANCE--0005 = 0
               MOVE 1 TO WS-POS
           ELSE
               PERFORM C1221-SEARCH-PARA VARYING INDX2 FROM 1 BY 1
                       UNTIL INSTANCE-ID-FOUND
           END-IF.
           MOVE 1 TO SUB-2.
           PERFORM C1222-EXPORT-RECORDS
               VARYING INDX3 FROM WS-POS BY 1
               UNTIL INDX3 > SUB-1 OR SUB-2 > 200.
           IF INDX3 > SUB-1
               COMPUTE SUB-2 = (SUB-2 - 1)
      *        DISPLAY "ACTIVATE-DATE-0009:"
      *                 ACTIVATE-DATE-0009(SUB-2)
      *        DISPLAY "EFFECTIVE-DATE-0009:"
      *                 EFFECTIVE-DATE-0009(SUB-2)
      *        DISPLAY "EFFECTIVE-END-DATE-0009:"
      *                 EFFECTIVE-END-DATE-0009(SUB-2)
               MOVE SPACES TO NEXT-GROUP-IND-0007
               MOVE +1 TO RETURN-CODE-0006
               MOVE +1 TO REASON-CODE-0006
           END-IF.

      ******************************************************************
      *                    SEARCH-PARA                                 *
      ******************************************************************
       C1221-SEARCH-PARA.

           IF WS-VALUE-PAIR-INSTN(INDX2) =
                          CODE-VALUE-PAIR-INSTANCE--0005
               COMPUTE WS-POS = (INDX2 + 1 )
               MOVE 'Y' TO WS-INSTANCE-FOUND
           END-IF.
      *
      ******************************************************************
      *                    EXPORT-RECORDS.                             *
      ******************************************************************
       C1222-EXPORT-RECORDS.

              MOVE WS-VALUE-PAIR-INSTN(INDX3)
                    TO CODE-VALUE-PAIR-INSTANCE--0009(SUB-2).
              MOVE WS-TABLE-CODE-FROM(INDX3)
                    TO FROM-CODE-TABLE-CODE-0009(SUB-2).
              MOVE WS-TABLE-CODE-TO(INDX3)
                    TO TO-CODE-TABLE-CODE-0009(SUB-2).
              MOVE WS-VALUE-CODE-FROM(INDX3)
                    TO FROM-CODE-VALUE-CODE-0009(SUB-2).
              MOVE WS-VALUE-CODE-TO(INDX3)
                    TO TO-CODE-VALUE-CODE-0009(SUB-2).
              MOVE WS-VALUE-PAIR-NAME(INDX3)
                    TO CODE-VALUE-PAIR-NAME-0009(SUB-2).
              MOVE WS-SHORT-DESCRIPTION(INDX3)
                    TO SHORT-DESCRIPTION-0009(SUB-2).
              MOVE WS-DELETED-IND(INDX3)
                    TO HAS-BEEN-DELETED-IND-0009(SUB-2).
              MOVE WS-ACTIVATE-DATE(INDX3)(1:2)
                    TO ACTIVATE-DATE-0009(SUB-2)(1:2)
              MOVE WS-ACTIVATE-DATE(INDX3)(4:2)
                    TO ACTIVATE-DATE-0009(SUB-2)(3:2)
              MOVE WS-ACTIVATE-DATE(INDX3)(7:4)
                    TO ACTIVATE-DATE-0009(SUB-2)(5:4)
              MOVE WS-EFFECTIVE-DATE(INDX3)(1:2)
                    TO EFFECTIVE-DATE-0009(SUB-2)(1:2)
              MOVE WS-EFFECTIVE-DATE(INDX3)(4:2)
                    TO EFFECTIVE-DATE-0009(SUB-2)(3:2)
              MOVE WS-EFFECTIVE-DATE(INDX3)(7:4)
                    TO EFFECTIVE-DATE-0009(SUB-2)(5:4)
              MOVE WS-EFFECTIVE-END-DATE(INDX3)
                    TO EFFECTIVE-END-DATE-0009(SUB-2)
              MOVE WS-EFFECTIVE-END-DATE(INDX3)(1:2)
                    TO EFFECTIVE-END-DATE-0009(SUB-2)(1:2)
              MOVE WS-EFFECTIVE-END-DATE(INDX3)(4:2)
                    TO EFFECTIVE-END-DATE-0009(SUB-2)(3:2)
              MOVE WS-EFFECTIVE-END-DATE(INDX3)(7:4)
                    TO EFFECTIVE-END-DATE-0009(SUB-2)(5:4)
              COMPUTE SUB-2 = (SUB-2 + 1).
              COMPUTE EXP-GRP-VALUE-PAIRS-0001MA
                    = (EXP-GRP-VALUE-PAIRS-0001MA + 1).

      ******************************************************************
      *                    CLOSE DATABLEPAIR                           *
      ******************************************************************


       C1230-CLOSE-DATABLEPAIR.

           EXEC SQL
            CLOSE DATABLEPAIR
           END-EXEC.
           IF SQLCODE NOT = 0
                MOVE SQLCODE TO WS-SQLCODE
      *         DISPLAY "CLOSE DATABLEPAIR ERROR", WS-SQLCODE
                MOVE 'FE' TO STATUS-FLAG OF GLOBDATA
                MOVE SQLCA TO SAVE-SQLCA OF GLOBDATA
                MOVE 'DB' TO LAST-STATUS OF GLOBDATA
           END-IF.

      ******************************************************************
      *                    INITIALIZE                                  *
      ******************************************************************
       B0000-INITIALIZE.

           INITIALIZE EXP-0006EV
           INITIALIZE EXP-0007EV
           MOVE 1 TO EXP-GRP-VALUE-PAIRS-0001PS
           INITIALIZE EXP-GRP-VALUE-PAIRS-0001RG
           INITIALIZE SUB-1
           INITIALIZE VALUEPAIR-COUNT
           MOVE 'N' TO WS-END-OF-TABLE
           MOVE 'N' TO WS-RECORD-FOUND
           MOVE 'N' TO WS-INSTANCE-FOUND
           MOVE 'Y' TO NEXT-GROUP-IND-0007
      *
           .


      *   +->   B04EX202_GET_DA_VALUE_PAIRS       04/10/2014  05:00
      *   !       IMPORTS:
      *   !         Work View import eww_supplied (Transient,
      *   !                     Optional, Import only)
      *   !           evaluation_date
      *   !         Entity View import code_table_pair (Transient,
      *   !                     Optional, Import only)
      *   !           code_table_pair_type_code
      *   !         Entity View import_next code_value_pair
      *   !                     (Transient, Optional, Import only)
      *   !           code_value_pair_instance_id
      *   !       EXPORTS:
      *   !         Work View exp eww_component (Transient, Export
      *   !                     only)
      *   !           return_code
      *   !           reason_code
      *   !           severity_code
      *   !           rollback_indicator
      *   !           origin_servid
      *   !         Work View exp eww_supplied (Transient, Export
      *   !                     only)
      *   !           evaluation_date
      *   !           next_group_ind
      *   !         Group View (200) exp_grp_value_pairs
      *   !           Entity View exp_grp_value_pair code_value_pair
      *   !                       (Transient, Export only)
      *   !             code_value_pair_instance_id
      *   !             from_code_table_code
      *   !             to_code_table_code
      *   !             from_code_value_code
      *   !             to_code_value_code
      *   !             code_value_pair_name
      *   !             short_description
      *   !             has_been_deleted_ind
      *   !             activate_date
      *   !             effective_date
      *   !             effective_end_date
      *   !
      *   !     EXTERNAL ACTION BLOCK
      *   !
     1*   !
      *   +---
